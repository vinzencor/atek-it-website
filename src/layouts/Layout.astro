---
import StickyContactBar from '../components/StickyContactBar.tsx';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  canonical?: string;
}

const { title, description = "ATEK IT - Leading IT consulting and software solutions company delivering intelligent services across cloud, DevOps, networking, and enterprise software development.", keywords = "IT consulting, software development, SaaS, PayPilot, cloud services, DevOps, digital transformation", canonical } = Astro.props;

const currentUrl = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/atek favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <link rel="canonical" href={canonical || currentUrl} />
    
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={currentUrl.toString()} />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="ATEK IT" />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    
    <!-- Structured Data -->
    <script type="application/ld+json" is:inline>
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "ATEK IT",
        "url": "https://atekit.com",
        "logo": "https://atekit.com/logo.png",
        "address": {
          "@type": "PostalAddress",
          "streetAddress": "7460 Warren Pkwy, Suite 100-148",
          "addressLocality": "Frisco",
          "addressRegion": "TX",
          "postalCode": "75034",
          "addressCountry": "US"
        },
        "contactPoint": {
          "@type": "ContactPoint",
          "telephone": "+1-469-269-2345",
          "contactType": "customer service",
          "email": "info@atekit.com"
        },
        "sameAs": [
          "https://www.linkedin.com/company/atekit/",
          "https://x.com/it_atek",
          "https://www.facebook.com/Atek-it-105861668506148",
          "https://www.instagram.com/atek_it/"
        ]
      }
    </script>
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=DM+Serif+Display:ital,wght@0,400;1,400&display=swap" rel="stylesheet">

    <!-- Netlify Identity Widget -->
    <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
  </head>
  <body class="min-h-screen bg-white font-sans antialiased">
    <slot />
    <StickyContactBar client:load />

    <!-- Netlify Identity Widget with Token Forwarding -->
    <script is:inline>
      // Token forwarding for email confirmations, invites, and recovery
      function handleAuthTokens() {
        const hash = window.location.hash;
        console.log('Checking for auth tokens in hash:', hash);

        // Check for confirmation, invite, or recovery tokens
        if (hash && (
          hash.includes('confirmation_token=') ||
          hash.includes('invite_token=') ||
          hash.includes('recovery_token=') ||
          hash.includes('access_token=')
        )) {
          console.log('Auth token detected, redirecting to admin panel');
          // Redirect to admin panel with the token
          window.location.href = '/admin/' + hash;
          return true;
        }
        return false;
      }

      // Run token check immediately
      if (!handleAuthTokens()) {
        // Only initialize normal flow if no tokens were found
        if (window.netlifyIdentity) {
          console.log('Netlify Identity widget loaded on main site');
          window.netlifyIdentity.on("init", user => {
            console.log('Identity initialized on main site:', user);
            if (!user) {
              window.netlifyIdentity.on("login", () => {
                console.log('User logged in on main site, redirecting to admin');
                document.location.href = "/admin/";
              });
            }
          });

          window.netlifyIdentity.on("logout", () => {
            console.log('User logged out on main site');
          });
        } else {
          console.log('Netlify Identity widget not available on main site');
        }
      }
    </script>
  </body>
</html>